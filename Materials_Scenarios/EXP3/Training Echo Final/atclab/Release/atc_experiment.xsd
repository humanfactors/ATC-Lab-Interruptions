<?xml version="1.0"?>

<xs:schema 
      xmlns:xs="http://www.w3.org/2001/XMLSchema" 
      targetNamespace="http://www.humanfactors.uq.edu.au/atc/2006/atc-ns"
      xmlns:atc="http://www.humanfactors.uq.edu.au/atc/2006/atc-ns"
      attributeFormDefault="qualified"
      elementFormDefault="qualified"
>

<!--
      ****************************************
      ****  Documentation                *****
      ****************************************
 -->

  <xs:annotation>
    <xs:documentation>
      <![CDATA[
      @project  : ATC-Lab

      @file     : $RCSfile: atc_experiment.xsd,v $
      @author   : $Author: Aaron Yeung $
      @version  : $Name:  $ ( $Revision: 1.9.2.10 $ )
      @date     : $Date: 2015/08/19 11:33:56 $
      @state    : $State: Exp $

      $Log: atc_experiment.xsd,v $
      Revision 1.9.2.10  2015/08/19 11:33:56  Aaron Yeung
      ATCLab v.2.4.5.18 Release:

      1) Added <atc:initial_display> child XML element to <atc:interruption> task to allow an experimenter to show an initial display during an external interruption task

      2) Added <atc:info_box> child XML element to <atc:trial> to allow an experimenter to display a text box in a trial to display any scriptable text.

      Revision 1.9.2.9  2015/08/18 11:55:12  Aaron Yeung
      Added <initial_display> XML element to the interrupt task so that it operates in exactly the same manner as the <initial_display> XML element for the nBack task

      Revision 1.9.2.8  2015/03/22 13:55:53  Aaron Yeung
      - Added scriptable switch to enable/disable the ability to double click an aircraft and rotate it's details
      - Added ability for nback task initial display and stimuli to be presented in subseconds
      - Fixed bug in the instruction task that only prints every second instruction tasks textbox to the output CSV file

      Revision 1.9.2.7  2015/02/23 13:34:42  Aaron Yeung
      - Added logging of interruption tasks to the output .xml file. The output XML logging are described below:
      	  *******************************************************************************************************************
                XML Element				Description							Values
                *******************************************************************************************************************
      	  interruption_type 			Type of interruption						"Interruption" or "NBack"
          	  start_time				Programmed start time of interruption
      	  end_time				Programmed end time of interruption
          	  show_full_screen			Whether the task was shown in full screen			0 = no, 1 = yes
          	  external_program			Name of external program that was run
          	  auto_accept				Whether aircraft were auto accepted during interruption		0 = no, 1 = yes
          	  auto_handoff				Whether aircraft were auto handed off during interruption	0 = no, 1 = yes

      	 - Added logging of interruption tasks to the output .csv file. The output fields are described below:
      	  *******************************************************************************************************************
                Field			Description							Values
                *******************************************************************************************************************
      	  Trial			Name of the trial that the interruption occurred in
      	  Interruption Type	Type of interruption						"Interruption" or "NBack"
          	  Start Time		Programmed start time of interruption
      	  End Time		Programmed end time of interruption
          	  Show Full Screen	Whether the task was shown in full screen			0 = no, 1 = yes
          	  External Program	Name of external program that was run
          	  Auto Accept		Whether aircraft were auto accepted during interruption		0 = no, 1 = yes
          	  Auto Handoff		Whether aircraft were auto handed off during interruption	0 = no, 1 = yes

      	 - Added additional field in the aircraft flash details section of the output .csv file called "Automatic" to indicate if an aircraft is
      	   automatically accepted or handed off. Values are 0 (not automatic) or 1 (automatic acceptance/handoff)

      	 - Added logging of reminder box dismiss button times to the output .xml file. The output XML logging are described below:
      	  *******************************************************************************************************************
                XML Element		Description								Values
                *******************************************************************************************************************
      	  reminder_box		Tag to indicate that the reminder box dismiss button was pressed	Aircraft callsign that had the dismiss button pressed
      	  dismiss_button	Tag to indicate that the reminder box dismiss button was pressed	"pressed"
      	  clicked_time		Millisecond time that the dismiss button was pressed

      	- Added logging of reminder box dismiss button times to the output .csv file. The output fields are described below:
      	  *******************************************************************************************************************
                Field			Description								Values
                *******************************************************************************************************************
      	  Trial  		Name of the trial that the dismiss button was pressed
      	  Callsign		Aircraft callsign that had the dismiss button pressed
      	  Dismiss Time		Time in seconds into the trial that the dismiss button was pressed
      	  Dismiss Time HP	Time in milliseconds into the trial that the dismiss button was pressed

      	- Added calculation of Nback task results based on participant's inputs/non-inputs in the N back task. The are described as follows:
      	  ***********************************************************************************************************************
      	  Result		Description
      	  ***********************************************************************************************************************
      	  Hit			Participant correctly responds to a stimuli that was the same as the stimuli N times before
      	  Miss			Participant fails to respond to a stimuli that was the same as the stimuli N times before
      	  Correct rejection	Participant correct ignores the stimuli which is not the same as the stimulis N times before
      	  False alarm		Paricipant incorrectly responds to a stimuli that was not the same as the stimuli N times before

      	 - Added logging of N back task results to the output .xml file. The output XML logging are described below:
      	  *******************************************************************************************************************
                XML Element		Description								Values
                *******************************************************************************************************************
      	  NBackTask_response	Stimuli order of the stimuli that was presented
      	  stimuli		The actual stimuli that was displayed to the participant
      	  response		The result of the paritcipant's response				hit, miss, false_alarm, correct_rejection

      	 - Added logging of N back task results to the output .csv file. The output fields are described below:
      	  *******************************************************************************************************************
                XML Element		Description								Values
                *******************************************************************************************************************
      	  Trial	  		Name of the trial that the N back response was generated in
      	  Stimuli Number	Stimuli order of the stimuli that was presented
      	  Stimuli		The actual stimuli that was displayed to the participant
      	  Response		The result of the paritcipant's response				hit, miss, false_alarm, correct_rejection

      	 - Added a count down timer for the blank interruption task. It can be enabled/disabled with the XML below:
      	  *******************************************************************************************************************
                XML Element		Attribute	Description							Values
                *******************************************************************************************************************
      	  atc:interruption	 atc:show_timer	Enable/disable countdown timer in the blank interruption task	'true' or 'false'

      	  Example:
      	  <atc:interruption atc:start='3' atc:end='21' atc:auto_handoff='true' atc:auto_accept='false' atc:show_blank_screen='true' atc:show_timer='true' atc:external_program='"calc.exe"'/>

      	  - Added ability to enable/disable error pop up dialogs when a paricipant misses an aircraft acceptance or handoff.
      	    This can be achieved with the XML below:
      	  ***********************************************************************************************************************************************
                XML Element	Attribute			Description									Values
                ***********************************************************************************************************************************************
      	  atc:trial	atc:notify_missed_acceptance	Enable/disable pop up error dialog when a paricipant misses an acceptance	'true' or 'false'
      			atc:notify_missed_handoff	Enable/disable pop up error dialog when a paricipant misses a handoff		'true' or 'false'

      	  Example:
      	  <atc:trial atc:idx='test2' atc:param='default' atc:map="map1" atc:sky="script2" atc:ui="ui001" atc:notify_missed_acceptance='false' atc:notify_missed_handoff='false'>

      Revision 1.9.2.6  2015/02/11 15:36:42  Aaron Yeung
      Implemented N Back Task which displays a sequence of random stimuli and users need to respond when the current stimuli is the same as the one presented N times ago. This is a full screen task that serves as a distraction to to ATC

      Revision 1.9.2.5  2014/12/10 13:26:18  Aaron Yeung
      ATC Version 2.4.5.8:

      - Implemented scriptable interruption task with configurable start time, end time, automatic aircraft acceptance,
      	    automatic aircraft handoff and the displaying of a full black screen
                *******************************************************************************************************************
                XML Element		Attributes  		Description
                *******************************************************************************************************************
      	  atc:interruption	atc:start		Trial time when the interruption begins
      				atc:end			Trial time when the interruption ends
      				atc:auto_handoff	Set if aircraft are automatically handed off during the interruption (true/false)
      				atc:auto_accept		Set if aircraft are automatically accepted during the interruption (true/false)
      				atc:show_blank_screen	Set if a full black screen is to be displayed to hide the aircraft simulation (true/false)
      				atc:external_program	Not implemented yet

      Revision 1.9.2.4  2014/12/02 13:48:59  Aaron Yeung
      Implemented scriptable handoff key for individual aircraft - <atc:handoffkey>
      Default handoff key is still the 'h' key

      Revision 1.9.2.3  2014/12/02 12:05:38  Aaron Yeung
      Added XML for adding the altitude change time restriction to aircraft <atc:altitudeChangeEnableTime>

      Revision 1.9.2.2  2014/11/26 14:13:24  Aaron Yeung
      Added dismissButton xml details for a scriptable dismiss button for aircraft reminder boxes

      Revision 1.9.2.1  2012/08/15 13:31:36  Aaron Yeung
      - Implemented scriptable sound file for trial tasks which allow a .wav file to be played while the trial is
      	    running.

      	  *******************************************************************************************************************
                XML Element                 Value	Description
                *******************************************************************************************************************
                atc:sound                   [String]	The full path to sound file in .wav format to be played for the
        				                trial. Note, the sound file will be stopped if its duration is longer than
      					        the trial duration.

                Example:
                <atc:trial atc:idx='test1' atc:param='default' atc:map="map1" atc:sky="scriptt1" atc:ui="ui001" atc:sound="C:\Documents and Settings\Aaron Yeung\My Documents\Key Centre For Human Factors\Work\Source\atc_lab\Debug\incorrect.wav">
                    <atc:timeEvent>300</atc:timeEvent>
                </atc:trial>

      Revision 1.9  2010/04/26 04:40:24  Aaron Yeung
      Added subelement to acceptedAircraftStateParams called 'flashColour' which replaces the equivalent sub-element 'colour' because Shayne had many scripts with <colour>red</colour> for aircrafts but don't want them to flash red. By adding this new sub-element only the few selected aircraft that need to flash red will have to be modified rather than every single aircraft

      Revision 1.8  2010/04/08 13:20:29  Aaron Yeung
      Initial attempt at adding reminder box to individual aircraft

      Revision 1.7  2009/05/24 02:12:59  Aaron Yeung
      Added functionality to specify and play WMA sound files in ATC using XML scripts

      Revision 1.6  2009/05/04 09:23:59  Aaron Yeung
      Added DivisionLine which allows a user to draw lines using XML. The user is able to specify a line's ID, start point (x1, y1), end point (x2, y2), colour, width, start time and end time.

      Revision 1.5  2009/04/27 13:39:27  Aaron Yeung
      Put back in the displayTime attribute in the reminderBox element for backward compatibility with old experiment scripts

      Revision 1.4  2009/04/23 12:50:02  Aaron Yeung
      Added displayTime element for reminder box so that a user can set when a reminder box can appear/hide

      Revision 1.3  2008/10/21 13:57:51  Aaron Yeung
      - Added functionality for experimenter to re-ask a question if the participant gives the wrong answer.
      - Added new xml element
      <questionBox>
              <atc:answer></atc:answer>
              <atc:incorrectResponse></atc:incorrectRespons>
      </questionBox>

      Revision 1.2  2008/07/12 19:57:12  Aaron Yeung
      Modified reminder box so that it can flash multiple times during a trial
      Added scriptable coordination request key so that an experimenter can script what keys a user needs to press for a coordination request aircraft

      Revision 1.1  2008/06/04 11:30:06  Aaron Yeung
      no message


      @copyright  : 2006 ARC Key Center for 
                    Human Factors & Applied Cognitive Psycology
      ]]>
    </xs:documentation>
  </xs:annotation>

<!--
      ****************************************
      ****  <atc:experiment>             *****
      ****************************************
 -->

  <xs:element name="experiment">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="config"       type="atc:configSection"      />
        <xs:element name="data"         type="atc:dataSection"        />
        <xs:element name="presentation" type="atc:presentationSection"/>
      </xs:sequence>
      <xs:attribute ref="atc:idx" use="required"/>
    </xs:complexType>
  </xs:element>

<!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++  <atc:config> type definition                     +++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 -->
  
  <xs:complexType name="configSection">
    <xs:sequence>
      <xs:element name="units">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="input" type="xs:token"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>


      <xs:element name="aircraftParam" minOccurs="0" maxOccurs="unbounded" type="atc:aircraftParamDef"/>
      <xs:element name="instruction"   minOccurs="0" maxOccurs="unbounded" type="atc:instructionDef"  />
      <xs:element name="question"      minOccurs="0" maxOccurs="unbounded" type="atc:questionDef"     />
    </xs:sequence>
  </xs:complexType>

<!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++  <atc:aircraftParam> type definition              +++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 -->
  
  <xs:complexType name="aircraftParamDef">
    <xs:sequence>
      <xs:element name="speed" minOccurs="0" type="xs:decimal"/>
      <xs:element name="level" minOccurs="0" type="xs:decimal"/>
      <xs:element name="RoC" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:decimal">
              <xs:attribute name="minLevel" default="0" type="xs:decimal"/>
              <xs:attribute name="maxLevel" default="0" type="xs:decimal"/>
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute ref="atc:idx" use="required"/>
  </xs:complexType>

<!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++  <atc:instruction> type definition                +++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 -->

  <xs:complexType name="instructionDef">
    <xs:sequence>
      <xs:element name="text" type="xs:string"/>
      <xs:choice>
        <xs:element name="keyEvent" minOccurs="0" maxOccurs="unbounded" type="xs:token"/>
        <xs:sequence>
          <xs:element name="buttonEvent" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
          <xs:element name="buttonTimeEvent" minOccurs="0" maxOccurs="unbounded" type="xs:integer"/>
          <xs:element name="textBox" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
          <xs:element name="questionBox" minOccurs="0" maxOccurs="unbounded" type="atc:questionBoxElement"/>
        </xs:sequence>
        <xs:sequence>
          <xs:element name="timeEvent" minOccurs="0" maxOccurs="unbounded" type="xs:integer"/>
          <xs:element name="showCountdown" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
        </xs:sequence>
      </xs:choice>
    </xs:sequence>
    <xs:attribute ref="atc:idx" use="required"/>
  </xs:complexType>
  
<!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++  <atc:question> type definition                   +++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 -->

  <xs:complexType name="questionDef">
    <xs:sequence>
      <xs:element name="text" type="xs:string"/>
      <xs:element name="scale">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="min" type="xs:integer"/>
            <xs:element name="max" type="xs:integer"/> 
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute ref="atc:idx" use="required"/>
  </xs:complexType>
  
<!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++  <atc:data> type definition                       +++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 -->
  
  <xs:complexType name="dataSection">
    <xs:sequence>
      <xs:element name="param" minOccurs="0" maxOccurs="unbounded" type="atc:paramDefinition"/>
      <xs:element name="map"   minOccurs="1" maxOccurs="unbounded" type="atc:mapDefinition"  />
      <xs:element name="sky"   minOccurs="0" maxOccurs="unbounded" type="atc:skyDefinition"  />
      <xs:element name="ui"    minOccurs="0" maxOccurs="unbounded" type="atc:uiDefinition"   />
    </xs:sequence>
  </xs:complexType>

<!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++  <atc:param> type definition                      +++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 -->

  <xs:complexType name="paramDefinition">
    <xs:sequence>
      <xs:element name="sectorEntryDistance" minOccurs="1" type="xs:integer"/>
      <xs:element name="sectorExitDistance" minOccurs="1" type="xs:integer"/>
      <xs:element name="update_rate"       minOccurs="0" type="xs:unsignedInt"/>
      <xs:element name="update_multiplier" minOccurs="0" type="xs:unsignedInt"/>
      <xs:element name="counter_format"    minOccurs="0" type="xs:string"/>
      <xs:element name="horizontal_doms"   minOccurs="0" type="xs:decimal"/>
      <xs:element name="vertical_doms"     minOccurs="0" type="xs:decimal"/>
    </xs:sequence>
    <xs:attribute ref="atc:idx" use="required"/>
  </xs:complexType>

<!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++  <atc:map> type definition                        +++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 -->

  <xs:complexType name="mapDefinition">
    <xs:sequence>
      <xs:element name="region"                                       type="atc:regionElement"  />
      <xs:element name="location" minOccurs="0" maxOccurs="unbounded" type="atc:locationElement"/>
      <xs:element name="route"    minOccurs="0" maxOccurs="unbounded" type="atc:routeElement"   />
      <xs:element name="sector"   minOccurs="0" maxOccurs="unbounded" type="atc:sectorElement"  />
    </xs:sequence>
    <xs:attribute ref="atc:idx" use="required"/>
  </xs:complexType>

<!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++  <atc:region> type definition                     +++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 -->

  <xs:complexType name="regionElement">
    <xs:complexContent>
      <xs:extension base="atc:point2D">
        <xs:attribute name="x_dim" use="required" type="xs:decimal"/>
        <xs:attribute name="y_dim" use="required" type="xs:decimal"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

<!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++  <atc:location> type definition                   +++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 -->

  <xs:complexType name="locationElement">
    <xs:complexContent>
      <xs:extension base="atc:point2D">
        <xs:attribute ref="atc:idx" use="required"/>
        <xs:attribute name="visible" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
<!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++  <atc:route> type definition                      +++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 -->

  <xs:complexType name="routeElement">
    <xs:sequence>
      <xs:group ref="atc:routeDescriptor" minOccurs="2" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute ref="atc:idx" use="required"/>
  </xs:complexType>

<!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++  route descriptor group                             ++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 -->

  <xs:group name="routeDescriptor">
    <xs:choice>
      <xs:element name="point" type="atc:point2D"/>
      <xs:element name="pointref">
        <xs:complexType>
          <xs:attribute name="location" type="xs:IDREF"/>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:group>

<!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++  <atc:sector> type definition                      ++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 -->
  
  <xs:complexType name="sectorElement">
    <xs:complexContent>
      <xs:extension base="atc:region2D">
        <xs:attribute name="status" use="optional" default="non-active">
          <xs:simpleType>
            <xs:restriction base="xs:NCName">
              <xs:enumeration value="active"    />
              <xs:enumeration value="non-active"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
<!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++  <atc:coordinationRequestType> type definition     ++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 -->
      <xs:complexType name="coordinationRequestElement">
        <xs:sequence>
          <xs:element name="show" minOccurs="0" maxOccurs="unbounded" type="xs:string" />
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>

<!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++  <atc:sky> type definition                         ++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 -->

  <xs:complexType name="skyDefinition">
    <xs:sequence>
      <xs:element name="aircraft"     minOccurs="0" maxOccurs="unbounded" type="atc:aircraftElement"    />
      <xs:element name="area"         minOccurs="0" maxOccurs="unbounded" type="atc:areaElement"        />
      <xs:element name="divisionLine" minOccurs="0" maxOccurs="unbounded" type="atc:divisionLineElement" />
      <xs:element name="reminderBox"  minOccurs="0" maxOccurs="unbounded" type="atc:reminderBoxElement" />
      <xs:element name="soundFile"    minOccurs="0" maxOccurs="unbounded" type="atc:soundFileElement" />
    </xs:sequence>
    <xs:attribute ref="atc:idx" use="required"/>
  </xs:complexType>
  
<!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++  <atc:aircraft> type definition                    ++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 -->

  <xs:complexType name="aircraftElement">
    <xs:sequence>
      <xs:element name="start" minOccurs="0" type="xs:integer"/>
      <xs:element name="altitude" minOccurs="0" type="xs:decimal"/>
      <xs:element name="altitudeChangeEnableTime" minOccurs="0" type="xs:integer"/>
      <xs:element name="velocity" minOccurs="0" type="xs:decimal"/>
      <xs:element name="flightpath">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="point" minOccurs="2" maxOccurs="unbounded">
              <xs:complexType>
                <xs:complexContent>
                  <xs:extension base="atc:point2D">
                    <xs:sequence>
                      <xs:element name="altitude" minOccurs="0" type="xs:decimal"/>
                      <xs:element name="ascent" minOccurs="0" type="xs:decimal"/>
                      <xs:element name="velocity"  minOccurs="0" type="xs:decimal"/>
                      <xs:element name="acceleration"  minOccurs="0" type="xs:decimal"/>
                    </xs:sequence>
                  </xs:extension>
                </xs:complexContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="acceptedStateFlashParams" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="flashItem" minOccurs="1" type="xs:string"/>
            <xs:element name="colour" minOccurs="1" type="xs:string"/>
            <xs:element name="flashColour" minOccurs="0" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      
      <xs:element name="coordinationRequest" minOccurs="0" type="atc:coordinationRequestElement"/>
      <xs:element name="handoffKey" minOccurs="0" type="xs:string"/>

      <xs:element name="closedpath" minOccurs="0"/>
      <xs:element name="conflictDetails" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="trial" minOccurs="1" type="xs:string"/>
            <xs:element name="acceptanceTime" minOccurs="1" type="xs:integer"/>
            <xs:element name="conflictTime" minOccurs="1" type="xs:integer"/>
            <xs:element name="conflictAircraft" minOccurs="1" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="idx" type="xs:string"/>
    <xs:attribute name="type" type="xs:IDREF"/>
  </xs:complexType>

<!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++  <atc:area> type definition                        ++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 -->

  <xs:complexType name="areaElement">
    <xs:complexContent>
      <xs:extension base="atc:region2D">
        <xs:attribute name="type" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
<!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++  <atc:divisionLineElement> type definition                        ++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 -->
  <xs:complexType name="divisionLineElement">
      <xs:sequence>
        <xs:element name="displayTime" minOccurs='0' maxOccurs="unbounded" type="atc:timePeriod"/>
      </xs:sequence>
      <xs:attribute name="id" use="required" type="xs:string"/>
      <xs:attribute name="x1" use="required" type="xs:integer"/>
      <xs:attribute name="y1" use="required" type="xs:integer"/>
      <xs:attribute name="x2" use="required" type="xs:integer"/>
      <xs:attribute name="y2" use="required" type="xs:integer"/>
      <xs:attribute name="color" type="xs:string"/>
      <xs:attribute name="width" type="xs:integer"/>
  </xs:complexType>

<!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++  <atc:reminderBox> type definition                        ++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 -->
  <xs:complexType name="reminderBoxElement">
      <xs:sequence>
        <xs:element name="displayTime" minOccurs='0' maxOccurs="unbounded" type="atc:timePeriod"/>
        <xs:element name="flashColor" minOccurs='0' maxOccurs="unbounded" type="xs:string"/>
        <xs:element name="flashTime" minOccurs='0' maxOccurs="unbounded" type="atc:timePeriod"/>
        <xs:element name="dismissButton" minOccurs='0' maxOccurs="unbounded">
          <xs:complexType>
            <xs:attribute name="enable_time" type="xs:integer"/>
            <xs:attribute name="label" type="xs:string"/>
            <xs:attribute name="fontSize" type="xs:integer"/>
            <xs:attribute name="width" type="xs:integer"/>
            <xs:attribute name="height" type="xs:integer"/>
            <xs:attribute name="posX" type="xs:integer"/>
            <xs:attribute name="posY" type="xs:integer"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="bgColor" type="xs:string"/>
      <xs:attribute name="width" type="xs:integer"/>
      <xs:attribute name="height" type="xs:integer"/>
      <xs:attribute name="aircraft" type="xs:string"/>
      <xs:attribute name="posX" type="xs:integer"/>
      <xs:attribute name="posY" type="xs:integer"/>
      <xs:attribute name="displayText" type="xs:string"/>
      <xs:attribute name="displayTextSize" type="xs:integer"/>
      <xs:attribute name="displayTime" type="xs:integer"/>
  </xs:complexType>

<!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++  <atc:soundFileElement> type definition            ++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 -->
  <xs:complexType name="soundFileElement">
      <xs:sequence>
        <xs:element name="playTime" minOccurs='1' maxOccurs="unbounded" type="atc:timePeriod"/>
      </xs:sequence>
      <xs:attribute name="fileName" use="required" type="xs:string"/>
  </xs:complexType>

<!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++  <atc:questionBox> type definition                        ++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 -->
  <xs:complexType name="questionBoxElement">
    <xs:sequence>
      <xs:element name="answer" minOccurs='1' maxOccurs='1' type="xs:string"/>
      <xs:element name="incorrectResponse" minOccurs='0' maxOccurs='1' type="xs:string"/>
    </xs:sequence>
  </xs:complexType>

  <!-- ======================================================= UI Definition -->

  <xs:complexType name="uiDefinition">
    <xs:sequence>
      <xs:element name="clock"      minOccurs='0' type="xs:string"/>
      <xs:element name="widget"     minOccurs='0' maxOccurs="unbounded" type="atc:widgetDefinition"/>
      <xs:element name="QObject"    minOccurs='0' maxOccurs="unbounded" type="atc:QObjectDefinition"/>
      <xs:element name="timeEvent1" minOccurs='0' maxOccurs="unbounded" type="xs:integer"/>
      <xs:element name="timeEvent2" minOccurs='0' maxOccurs="unbounded" type="xs:integer"/>
      <xs:element name="timeEvent3" minOccurs='0' maxOccurs="unbounded" type="xs:integer"/>
      <xs:element name="timeEvent4" minOccurs='0' maxOccurs="unbounded" type="xs:integer"/>
      <xs:element name="connection" minOccurs='0' maxOccurs="unbounded">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="signal">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:NCName">
                  <!-- enumeration of valid signals -->
                    <xs:attribute name="tx" type="xs:IDREF"/>
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
            <xs:element name="slot" maxOccurs="unbounded">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:NCName">
                  <!-- enumeration of valid slots -->
                    <xs:attribute name="rx" type="xs:IDREF"/>
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute ref="atc:idx" use="required"/>
  </xs:complexType>
  
  <xs:complexType name="widgetDefinition">
    <xs:sequence>
      <xs:element name="property" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:sequence>
            <!-- @todo: enumerate valid properties? -->
            <xs:any processContents="lax"/>
          </xs:sequence>
          <xs:attribute name="name" use="required" type="xs:NCName"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="layout" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:group ref="atc:layoutElement" maxOccurs="unbounded"/>
          </xs:sequence>
          <xs:attribute name="type" use="required">
            <xs:simpleType>
              <xs:restriction base="xs:NCName">
                <xs:enumeration value="hbox"/>
                <xs:enumeration value="vbox"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="margin" default="0" type="xs:nonNegativeInteger"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="class" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:NCName">
          <xs:enumeration value="dialog"/>
          <xs:enumeration value="frame"/>
          <xs:enumeration value="label"/>
          <xs:enumeration value="pushbutton"/>
          <xs:enumeration value="textline"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="name" use="required" type="xs:ID"/>
  </xs:complexType>

  <xs:complexType name="QObjectDefinition">
    <xs:sequence>
      <xs:element name="property" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="integer" minOccurs="1" maxOccurs="unbounded" type="xs:integer"/>
          </xs:sequence>
          <xs:attribute name="name" use="required" type="xs:NCName"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="class" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:NCName">
          <xs:enumeration value="Clock"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <!--
      layoutElement
  -->
  <xs:group name="layoutElement">
    <xs:choice>
      <xs:element name="widget" type="atc:widgetDefinition"/>
      <xs:element name="space" default="10" type="xs:unsignedInt"/>
      <xs:element name="stretch" default="0" type="xs:unsignedInt"/>
    </xs:choice>
  </xs:group>


  <!-- ================================================== Presentation Items -->
  <!-- ===================================================================== -->
  
  <xs:complexType name="presentationSection">
    <xs:sequence>
      <xs:element name="phase" maxOccurs="unbounded">
        <xs:complexType>
          <xs:sequence>
            <xs:group ref="atc:phaseDescriptor" maxOccurs="unbounded"/>
          </xs:sequence>
          <xs:attribute ref="atc:idx" use="required"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!--
      phaseDescriptor
  -->
  <xs:group name="phaseDescriptor">
    <xs:choice>
      <xs:element name="instruction">
        <xs:complexType>
          <xs:attribute name="idxref" type="xs:IDREF"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="question">
        <xs:complexType>
          <xs:attribute name="idxref" type="xs:IDREF"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="trial">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="keyEvent" minOccurs="0" maxOccurs="unbounded" type="xs:token"/>
            <xs:element name="timeEvent" minOccurs="0" type="xs:positiveInteger"/>
            <xs:element name="info_box" minOccurs="0" type="atc:infoBoxElement"/>
            <xs:element name="interruption" minOccurs="0" type="atc:interruptionElement"/>
            <xs:element name="nbackTask" minOccurs="0" type="atc:nbackTaskElement"/>
          </xs:sequence>
          <xs:attribute ref="atc:idx" use="required"/>
          <xs:attribute name="param" use="required" type="xs:IDREF"/>
          <xs:attribute name="map" use="required" type="xs:IDREF"/>
          <xs:attribute name="sky" use="required" type="xs:IDREF"/>
          <xs:attribute name="ui" type="xs:IDREF"/>
          <xs:attribute name="sound" use="optional" type="xs:string"/>
          <xs:attribute name="notify_missed_acceptance" use="optional" type="xs:string"/>
          <xs:attribute name="notify_missed_handoff" use="optional" type="xs:string"/>
          <xs:attribute name="disable_callout_rotation" use="optional" type="xs:string"/>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:group>
                
  <xs:complexType name="infoBoxElement">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="x"            use="optional" type="xs:integer"  />
        <xs:attribute name="y"            use="optional" type="xs:integer"  />
        <xs:attribute name="font"         use="optional" type="xs:string"   />
        <xs:attribute name="font_size"    use="optional" type="xs:integer"  />
        <xs:attribute name="font_colour"  use="optional" type="xs:string"   />
        <xs:attribute name="border"       use="optional" type="xs:string"   />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="interruptionElement">
    <xs:sequence>
      <xs:element name="initial_display" minOccurs="0" maxOccurs="unbounded" type='atc:initialDisplayElement'/>
    </xs:sequence>
    <xs:attribute name="start" type="xs:integer"/>
    <xs:attribute name="end" type="xs:integer"/>
    <xs:attribute name="auto_handoff" type="xs:string"/>
    <xs:attribute name="auto_accept" type="xs:string"/>
    <xs:attribute name="show_blank_screen" type="xs:string"/>
    <xs:attribute name="external_program" type="xs:string"/>
    <xs:attribute name="show_timer" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="nbackTaskElement">
    <xs:sequence>
      <xs:element name="initial_display" minOccurs="0" maxOccurs="unbounded" type='atc:initialDisplayElement'/>
      <xs:element name="stimuli" minOccurs="0" maxOccurs="unbounded" type='atc:stimuliElement'/>
      <xs:element name="correct_feedback" minOccurs="0" maxOccurs="unbounded" type='atc:feedbackDisplayElement'/>
      <xs:element name="incorrect_feedback" minOccurs="0" maxOccurs="unbounded" type='atc:feedbackDisplayElement'/>
      <xs:element name="timer" minOccurs="0" maxOccurs="unbounded" type='atc:feedbackTimerElement'/>
    </xs:sequence>
    <xs:attribute name="start" type="xs:integer"/>
    <xs:attribute name="end" type="xs:integer"/>
    <xs:attribute name="auto_handoff" type="xs:string"/>
    <xs:attribute name="auto_accept" type="xs:string"/>
    <xs:attribute name="background_colour" type="xs:string"/>
    <xs:attribute name="response_key" type="xs:string"/>
    <xs:attribute name="n_factor" type="xs:integer"/>
    <xs:attribute name="reptition_probability" type="xs:integer"/>
    <xs:attribute name="show_task" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="initialDisplayElement">
    <xs:attribute name="symbol" type="xs:string"/>
    <xs:attribute name="font" type="xs:string"/>
    <xs:attribute name="font_size" type="xs:integer"/>
    <xs:attribute name="font_colour" type="xs:string"/>
    <xs:attribute name="duration_ms" type="xs:integer"/>
    <xs:attribute name="show_timer" type="xs:string"/>
    <xs:attribute name="x" type="xs:integer"/>
    <xs:attribute name="y" type="xs:integer"/>
  </xs:complexType>

  <xs:complexType name="stimuliElement">
    <xs:attribute name="font" type="xs:string"/>
    <xs:attribute name="font_size" type="xs:string"/>
    <xs:attribute name="font_colour" type="xs:string"/>
    <xs:attribute name="display_duration_ms" type="xs:integer"/>
    <xs:attribute name="show_timer" type="xs:string"/>
    <xs:attribute name="x" type="xs:integer"/>
    <xs:attribute name="y" type="xs:integer"/>
  </xs:complexType>

  <xs:complexType name="feedbackDisplayElement">
    <xs:attribute name="symbol" type="xs:string"/>
    <xs:attribute name="colour" type="xs:string"/>
    <xs:attribute name="width" type="xs:integer"/>
    <xs:attribute name="height" type="xs:integer"/>
    <xs:attribute name="x" type="xs:integer"/>
    <xs:attribute name="y" type="xs:integer"/>
  </xs:complexType>

  <xs:complexType name="feedbackTimerElement">
    <xs:attribute name="font" type="xs:string"/>
    <xs:attribute name="font_size" type="xs:string"/>
    <xs:attribute name="font_colour" type="xs:string"/>
    <xs:attribute name="x" type="xs:integer"/>
    <xs:attribute name="y" type="xs:integer"/>
  </xs:complexType>
<!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++  atc:idx attribute type definition                 ++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 -->

  <xs:attribute name="idx" type="xs:ID"/>
  
<!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++  atc:point2D type definition                      +++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 -->

  <xs:complexType name="point2D">
    <xs:attribute name="x" use="required" type="xs:decimal"/>
    <xs:attribute name="y" use="required" type="xs:decimal"/>
  </xs:complexType>

<!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++  atc:arc2D type definition                        +++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 -->

  <xs:complexType name="arc2D">
    <xs:complexContent>
      <xs:extension base="atc:point2D">
        <xs:attribute name="r" use="optional" type="xs:decimal"/>
        <xs:attribute name="a" use="optional" type="xs:decimal"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

<!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++  atc:ellipse2Dtype definition                     +++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 -->

  <xs:complexType name="ellipse2D">
    <xs:complexContent>
      <xs:extension base="atc:point2D">
        <xs:attribute name="w" use="required" type="xs:decimal"/>
        <xs:attribute name="h" use="required" type="xs:decimal"/>
        <xs:attribute name="a" use="required" type="xs:decimal"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

<!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++  atc:region2D type definition                     +++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 -->

  <xs:complexType name="region2D">
    <xs:sequence>
      <xs:group ref="atc:region_descriptor" maxOccurs="unbounded"/>
      <xs:element name="remove" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:attribute name="idxref" use="required" type="xs:IDREF"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute ref="atc:idx" use="required"/>
  </xs:complexType>

<!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++  atc:region_descriptor group definition            ++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 -->

  <xs:group name="region_descriptor">
    <xs:choice>
      <xs:element name="vertex"  type="atc:point2D"   />
      <xs:element name="arc"     type="atc:arc2D"     />
      <xs:element name="ellipse" type="atc:ellipse2D" />
    </xs:choice>
  </xs:group>

<!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      ++++  atc:timePeriod type definition                      +++++
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 -->

  <xs:complexType name="timePeriod">
    <xs:attribute name="startTime" use="required" type="xs:integer"/>
    <xs:attribute name="endTime" use="required" type="xs:integer"/>
  </xs:complexType>

</xs:schema>
